#!/usr/bin/env bash
set -euxo pipefail

build-skyscope() {
  # Users may not have enabled flakes in nix.conf so do it explicitly via cli args.
  nix develop \
    --extra-experimental-features flakes \
    --extra-experimental-features nix-command \
    --command bazel build //backend:skyscope
}

run-skyscope() {(
  cd "${BASH_SOURCE[0]%/bin/skyscope-dev}"
  SKYSCOPE_BIN="bazel-bin/backend/skyscope"
  [[ -x "$SKYSCOPE_BIN" ]] || build-skyscope
  "$SKYSCOPE_BIN" +RTS -N -RTS "$@"
)}

# Find the version used in this workspace.
BAZEL_VERSION="$(bazel version | grep -Po '(?<=Build label: ).*')"

# Determine required options for version.
case "$BAZEL_VERSION" in
  3.*|4.*|5.*)
    DUMP_OPT="detailed"
    export SKYSCOPE_LEGACY_BAZEL="1"
    ;;
  *)
    DUMP_OPT="deps"
    ;;
esac

# Kill the server if it's running.
PID_FILE="$HOME/.skyscope/server.pid"
PID=$(cat "$PID_FILE" 2>/dev/null) && {
  kill $PID || true
  rm $PID_FILE
}

# Launch the server.
SERVER_PORT="28581"
run-skyscope server "$SERVER_PORT"

# Create a new empty database for the import.
export SKYSCOPE_WORKSPACE="$(bazel info | grep -Po '(?<=workspace: ).*')"
export SKYSCOPE_OUTPUT_BASE="$(bazel info | grep -Po '(?<=output_base: ).*')"
DB_TEMPLATE="$(basename "$SKYSCOPE_WORKSPACE")-XXXXX.sqlite"
IMPORT_DIR="$HOME/.skyscope/imports"
mkdir -p "$IMPORT_DIR"
DB_PATH="$(mktemp -p "$IMPORT_DIR" "$DB_TEMPLATE")"

# Dump Skyframe graph and import it into a new database.
(sleep 0.1; bazel dump --skyframe=$DUMP_OPT) | run-skyscope import-skyframe "$DB_PATH"

# TODO: Add --aquery arg and pass value to aquery
(sleep 0.1; bazel aquery "${SKYSCOPE_AQUERY_ARG:-deps(//...)}") | run-skyscope import-actions "$DB_PATH"

# TODO: Add --query arg and pass value to query
(sleep 0.1; bazel query "${SKYSCOPE_QUERY_ARG:-deps(//...)}" --output build) | run-skyscope import-targets "$DB_PATH"

# Let the server know about the imported graph.
URL_BASE="http://localhost:28581"
IMPORT_RESULT=$(curl -s -XPOST "$URL_BASE" -d "[\"$SKYSCOPE_WORKSPACE\",\"$DB_PATH\"]")
URL="$URL_BASE/$(jq -r .importId <<<"$IMPORT_RESULT")"

printf "\nOpen this link in your browser:\n"
printf "  \x1b[1;36m%s\x1b[0m\n" "$URL"
